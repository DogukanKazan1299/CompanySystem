/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dao;

import entity.Kullanici;
import entity.PatronBiligilendirme;
import java.awt.Color;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class PatronBilgilendirmeEkrani extends javax.swing.JFrame implements PersonelEkrani.PatronBilgi {

    DefaultTableModel model;
    Kullanici islemler = new Kullanici();

    public PatronBilgilendirmeEkrani() {
        initComponents();
        this.getContentPane().setBackground(Color.getHSBColor(44, 62, 10));
        model = (DefaultTableModel) bilgi_tablosu.getModel();
        patronBilgilendirmeGoruntule();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        patronBilgi_txt = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        geri_alani = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bilgi_tablosu = new javax.swing.JTable();
        kaydet = new javax.swing.JButton();
        bilgi_alani = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        guncelleBtn = new javax.swing.JButton();
        mesaj_yazisi = new javax.swing.JLabel();
        silBtn = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 100, 0, 0));

        patronBilgi_txt.setColumns(20);
        patronBilgi_txt.setRows(5);
        jScrollPane2.setViewportView(patronBilgi_txt);

        jLabel1.setBackground(new java.awt.Color(0, 204, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("PATRON BİLGİLENDİRME TABLOSU :");

        geri_alani.setBackground(new java.awt.Color(204, 255, 204));
        geri_alani.setText("Geri");
        geri_alani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geri_alaniActionPerformed(evt);
            }
        });

        bilgi_tablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PATRON BİLGİLENDİRME ALANI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bilgi_tablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bilgi_tablosuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bilgi_tablosu);
        if (bilgi_tablosu.getColumnModel().getColumnCount() > 0) {
            bilgi_tablosu.getColumnModel().getColumn(0).setResizable(false);
            bilgi_tablosu.getColumnModel().getColumn(1).setResizable(false);
        }

        kaydet.setText("Kaydet");
        kaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaydetActionPerformed(evt);
            }
        });

        jLabel3.setText(" Patron Bilgilenirme :");

        guncelleBtn.setText("Güncelle");
        guncelleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guncelleBtnActionPerformed(evt);
            }
        });

        mesaj_yazisi.setForeground(new java.awt.Color(204, 0, 0));

        silBtn.setText("Sil");
        silBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                                .addComponent(geri_alani)))
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bilgi_alani, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(kaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(guncelleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(silBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mesaj_yazisi, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(geri_alani)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bilgi_alani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(guncelleBtn)
                        .addComponent(silBtn)))
                .addGap(29, 29, 29)
                .addComponent(mesaj_yazisi)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void geri_alaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geri_alaniActionPerformed
        SirketEkrani sirketEkrani = new SirketEkrani(this, rootPaneCheckingEnabled);
        setVisible(false);

        sirketEkrani.setVisible(true);
    }//GEN-LAST:event_geri_alaniActionPerformed

    private void kaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaydetActionPerformed
        String bilgi;
        bilgi = patronBilgi_txt.getText();
        islemler.patronBilgiKaydet(bilgi);
        patronBilgilendirmeGoruntule();
    }//GEN-LAST:event_kaydetActionPerformed

    private void bilgi_tablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bilgi_tablosuMouseClicked
        int selectedrow = bilgi_tablosu.getSelectedRow();

        bilgi_alani.setText(model.getValueAt(selectedrow, 1).toString());


    }//GEN-LAST:event_bilgi_tablosuMouseClicked

    private void guncelleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guncelleBtnActionPerformed
        String bilgi = bilgi_alani.getText();

        int selectedrow = bilgi_tablosu.getSelectedRow();

        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                mesaj_yazisi.setText("Patron Bilgilendirme Tablosu şu anda boş..");
            } else {
                mesaj_yazisi.setText("Güncellenecek bir bilgi seçiniz");
            }
        } else {

            int id = (int) model.getValueAt(selectedrow, 0);

            islemler.patronBilgiGuncelle(id, bilgi);
            patronBilgilendirmeGoruntule();
            mesaj_yazisi.setText("Bilgiler başarıyla güncellendi...");
    }//GEN-LAST:event_guncelleBtnActionPerformed
    }
    private void silBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silBtnActionPerformed

         mesaj_yazisi.setText("");
        int selectedrow = bilgi_tablosu.getSelectedRow();

        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                mesaj_yazisi.setText("Patron Bilgilendirme Tablosu Şu Anda Boş");
            } else {
                mesaj_yazisi.setText("Lütfen silinecek bir bilgi seçiniz..");
            }
        } else {
            int id = (int) model.getValueAt(selectedrow, 0);
            islemler.patronBilgiSil(id);
            patronBilgilendirmeGoruntule();
            mesaj_yazisi.setText("Bilgi başarıyla silindi");
        }
    }//GEN-LAST:event_silBtnActionPerformed
    
    public void patronBilgilendirmeGoruntule() {

        model.setRowCount(0);

        ArrayList<PatronBiligilendirme> patronBilgilendirme = new ArrayList<PatronBiligilendirme>();

        patronBilgilendirme = islemler.patronBilgiGetir();

        if (patronBilgilendirme != null) {

            for (PatronBiligilendirme patronBilgi : patronBilgilendirme) {
                Object[] eklenecek = {patronBilgi.getId(), patronBilgi.getBilgi()};

                model.addRow(eklenecek);
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatronBilgilendirmeEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatronBilgilendirmeEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatronBilgilendirmeEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatronBilgilendirmeEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatronBilgilendirmeEkrani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bilgi_alani;
    private javax.swing.JTable bilgi_tablosu;
    private javax.swing.JButton geri_alani;
    private javax.swing.JButton guncelleBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton kaydet;
    private javax.swing.JLabel mesaj_yazisi;
    private javax.swing.JTextArea patronBilgi_txt;
    private javax.swing.JButton silBtn;
    // End of variables declaration//GEN-END:variables

    

    @Override
    public void notifyChanges(String message) {
        patronBilgi_txt.setText(message);//İlgili mesajları metin alanına patrona bilgi vermek için çekiyoruz 
    
    }

}
