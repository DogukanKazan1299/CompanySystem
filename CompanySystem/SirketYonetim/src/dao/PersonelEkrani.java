package dao;

import entity.Kullanici;
import entity.Personel;
import java.awt.Color;
import java.sql.Date;
import dao.PatronBilgilendirmeEkrani;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class PersonelEkrani extends javax.swing.JFrame {

    DefaultTableModel model;
    Kullanici islemler = new Kullanici();

    private ArrayList<PatronBilgi> pBilgi = new ArrayList<>();

    /**
     * Creates new form PersonelEkrani
     */
    public PersonelEkrani() {
        initComponents();
        //this.getContentPane().setBackground(Color.ORANGE);
        this.getContentPane().setBackground(Color.getHSBColor(44, 62, 10));
        model = (DefaultTableModel) personel_tablosu.getModel();
        personelGoruntule();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        personel_tablosu = new javax.swing.JTable();
        geri_alani = new javax.swing.JButton();
        arama_cubugu = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        id_alani = new javax.swing.JTextField();
        adsoyad_alani = new javax.swing.JTextField();
        dept_alani = new javax.swing.JTextField();
        tarih_alani = new javax.swing.JTextField();
        sozlesme_alani = new javax.swing.JTextField();
        sirketid_alani = new javax.swing.JTextField();
        p_maas_alani = new javax.swing.JTextField();
        mesaj_yazisi = new javax.swing.JLabel();
        p_ekle = new javax.swing.JButton();
        guncelle = new javax.swing.JButton();
        sil = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 100, 0, 0));

        personel_tablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "ad_soyad", "departman", "giriş tarihi", "sözleşme süresi", "şirket id", "personel maaş"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        personel_tablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personel_tablosuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(personel_tablosu);
        if (personel_tablosu.getColumnModel().getColumnCount() > 0) {
            personel_tablosu.getColumnModel().getColumn(0).setResizable(false);
            personel_tablosu.getColumnModel().getColumn(1).setResizable(false);
            personel_tablosu.getColumnModel().getColumn(2).setResizable(false);
            personel_tablosu.getColumnModel().getColumn(3).setResizable(false);
            personel_tablosu.getColumnModel().getColumn(4).setResizable(false);
            personel_tablosu.getColumnModel().getColumn(5).setResizable(false);
            personel_tablosu.getColumnModel().getColumn(6).setResizable(false);
        }

        geri_alani.setBackground(new java.awt.Color(204, 255, 204));
        geri_alani.setText("Geri");
        geri_alani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geri_alaniActionPerformed(evt);
            }
        });

        arama_cubugu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arama_cubuguKeyReleased(evt);
            }
        });

        jLabel1.setText(" Id :");

        jLabel2.setText(" Ad Soyad : ");

        jLabel3.setText(" Departman :");

        jLabel4.setText(" Giriş Tarihi :");

        jLabel5.setText("Sözleşme Süresi :");

        jLabel6.setText("Şirket Id :");

        jLabel7.setText("Personel Maaş :");

        mesaj_yazisi.setForeground(new java.awt.Color(255, 0, 0));

        p_ekle.setBackground(new java.awt.Color(0, 153, 255));
        p_ekle.setText("Personel Ekle");
        p_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_ekleActionPerformed(evt);
            }
        });

        guncelle.setBackground(new java.awt.Color(255, 255, 0));
        guncelle.setText("Personel Güncelle");
        guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guncelleActionPerformed(evt);
            }
        });

        sil.setBackground(new java.awt.Color(255, 0, 0));
        sil.setText("Sil");
        sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(id_alani)
                                    .addComponent(adsoyad_alani)
                                    .addComponent(dept_alani)
                                    .addComponent(tarih_alani, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sozlesme_alani)
                                            .addComponent(sirketid_alani)
                                            .addComponent(p_maas_alani, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(p_ekle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(guncelle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(sil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(mesaj_yazisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(geri_alani))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(arama_cubugu, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                                    .addComponent(jSeparator1))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(geri_alani)
                .addGap(21, 21, 21)
                .addComponent(arama_cubugu, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id_alani, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sozlesme_alani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(p_ekle)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adsoyad_alani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sirketid_alani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guncelle))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dept_alani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p_maas_alani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sil))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tarih_alani, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesaj_yazisi))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void geri_alaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geri_alaniActionPerformed
        CalisanlarEkrani calisanlarEkrani = new CalisanlarEkrani();
        setVisible(false);

        calisanlarEkrani.setVisible(true);
    }//GEN-LAST:event_geri_alaniActionPerformed

    public void dinamikAra(String ara) {

        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);

        personel_tablosu.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(ara));

    }

    private void arama_cubuguKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arama_cubuguKeyReleased
        String ara = arama_cubugu.getText();

        dinamikAra(ara);
    }//GEN-LAST:event_arama_cubuguKeyReleased
    ArrayList<Personel> personeller = new ArrayList<Personel>();

    private void p_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_ekleActionPerformed

        mesaj_yazisi.setText("");

        int id = (Integer.parseInt(id_alani.getText()));
        String ad_soyad = adsoyad_alani.getText();
        String departman = dept_alani.getText();
        Date giristarihi = Date.valueOf(tarih_alani.getText());
        float sozlesmesuresi = (Float.parseFloat(sozlesme_alani.getText()));
        int sirketid = (Integer.parseInt(sirketid_alani.getText()));
        int p_maas = (Integer.parseInt(p_maas_alani.getText()));

        islemler.personelEkle(id, ad_soyad, departman, giristarihi, sozlesmesuresi, sirketid, p_maas);

        personelGoruntule();
        mesaj_yazisi.setText("Yeni bir personel eklendi...");

        PatronBilgilendirmeEkrani patronBilgilendirmeEkrani = new PatronBilgilendirmeEkrani();
        patronBilgilendirmeEkrani.setLocation(WIDTH, WIDTH);
        patronBilgilendirmeEkrani.setTitle("Patron Bilgilendirme Ekranı");
        patronBilgilendirmeEkrani.setVisible(true);

        pBilgi.add(patronBilgilendirmeEkrani);
        String message = "Şirkete yeni bir personel eklendi...";//Patrona otomatik göderilecek mesaj

        if (message.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Message is Empty");
            return;
        }
        for (PatronBilgi patronBilgi : pBilgi) {
            patronBilgi.notifyChanges(message);//Mesajı almak için çağrılan method
        }

    }//GEN-LAST:event_p_ekleActionPerformed
////Observer tasarım kalıbını kullanmak için interface kullandık.
    public interface PatronBilgi {

        void notifyChanges(String message);//mesaj bildirme 
    }


    private void personel_tablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personel_tablosuMouseClicked

        int selectedrow = personel_tablosu.getSelectedRow();

        id_alani.setText(model.getValueAt(selectedrow, 0).toString());
        adsoyad_alani.setText(model.getValueAt(selectedrow, 1).toString());
        dept_alani.setText(model.getValueAt(selectedrow, 2).toString());
        tarih_alani.setText(model.getValueAt(selectedrow, 3).toString());
        sozlesme_alani.setText(model.getValueAt(selectedrow, 4).toString());
        sirketid_alani.setText(model.getValueAt(selectedrow, 5).toString());
        p_maas_alani.setText(model.getValueAt(selectedrow, 6).toString());
    }//GEN-LAST:event_personel_tablosuMouseClicked

    private void guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guncelleActionPerformed

        //int id = (Integer.parseInt(id_alani.getText()));
        String ad_soyad = adsoyad_alani.getText();
        String departman = dept_alani.getText();
        Date giristarihi = Date.valueOf(tarih_alani.getText());
        float sozlesmesuresi = (Float.parseFloat(sozlesme_alani.getText()));
        int sirketid = (Integer.parseInt(sirketid_alani.getText()));
        int p_maas = (Integer.parseInt(p_maas_alani.getText()));

        int selectedrow = personel_tablosu.getSelectedRow();

        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                mesaj_yazisi.setText("Personel Tablosu şu anda boş..");
            } else {
                mesaj_yazisi.setText("Güncellenecek bir personel seçin");
            }
        } else {

            int id = (int) model.getValueAt(selectedrow, 0);

            islemler.personelGuncelle(id, ad_soyad, departman, giristarihi, sozlesmesuresi, sirketid, p_maas);
            personelGoruntule();
            mesaj_yazisi.setText("Personel başarıyla güncellendi...");

            PatronBilgilendirmeEkrani patronBilgilendirmeEkrani = new PatronBilgilendirmeEkrani();
            patronBilgilendirmeEkrani.setLocation(WIDTH, WIDTH);
            patronBilgilendirmeEkrani.setTitle("Patron Bilgilendirme Ekranı");
            patronBilgilendirmeEkrani.setVisible(true);

            pBilgi.add(patronBilgilendirmeEkrani);
            String message = "Şirkette  bir personelin bilgileri güncellendi...";//Patrona otomatik göderilecek mesaj

            if (message.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Message is Empty");
                return;
            }
            for (PatronBilgi patronBilgi : pBilgi) {
                patronBilgi.notifyChanges(message);//Mesajı almak için çağrılan method
            }

        }
    }//GEN-LAST:event_guncelleActionPerformed

    private void silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silActionPerformed
        mesaj_yazisi.setText("");
        int selectedrow = personel_tablosu.getSelectedRow();

        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                mesaj_yazisi.setText("Personel Tablosu Şu Anda Boş");
            } else {
                mesaj_yazisi.setText("Lütfen silinecek bir Personel seçiniz..");
            }
        } else {
            int id = (int) model.getValueAt(selectedrow, 0);
            islemler.personelSil(id);
            personelGoruntule();
            mesaj_yazisi.setText("Personel başarıyla silindi");

            PatronBilgilendirmeEkrani patronBilgilendirmeEkrani = new PatronBilgilendirmeEkrani();
            patronBilgilendirmeEkrani.setLocation(WIDTH, WIDTH);
            patronBilgilendirmeEkrani.setTitle("Patron Bilgilendirme Ekranı");
            patronBilgilendirmeEkrani.setVisible(true);

            pBilgi.add(patronBilgilendirmeEkrani);
            String message = "Şirketten  bir personel işten çıkarıldı...";

            if (message.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Message is Empty");
                return;
            }
            for (PatronBilgi patronBilgi : pBilgi) {
                patronBilgi.notifyChanges(message);
            }
        }
    }//GEN-LAST:event_silActionPerformed

    public void personelGoruntule() {

        model.setRowCount(0);

        ArrayList<Personel> personeller = new ArrayList<Personel>();

        personeller = islemler.personelleriGetir();
        if (personeller != null) {
            for (Personel personel : personeller) {
                Object[] eklenecek = {personel.getId(), personel.getAd_soyad(), personel.getDepartman(), personel.getGiristarihi(),
                    personel.getSozlesmesuresi(), personel.getSirketid(), personel.getP_maas()};

                model.addRow(eklenecek);

            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonelEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonelEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonelEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonelEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonelEkrani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adsoyad_alani;
    private javax.swing.JTextField arama_cubugu;
    private javax.swing.JTextField dept_alani;
    private javax.swing.JButton geri_alani;
    private javax.swing.JButton guncelle;
    private javax.swing.JTextField id_alani;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel mesaj_yazisi;
    private javax.swing.JButton p_ekle;
    private javax.swing.JTextField p_maas_alani;
    private javax.swing.JTable personel_tablosu;
    private javax.swing.JButton sil;
    private javax.swing.JTextField sirketid_alani;
    private javax.swing.JTextField sozlesme_alani;
    private javax.swing.JTextField tarih_alani;
    // End of variables declaration//GEN-END:variables
}
